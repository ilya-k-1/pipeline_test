# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "Hi"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
  gobuild:

    runs-on: ubuntu-latest

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Fetch the tools
      uses: actions/checkout@v2
      with:
        repository: ilya-k-1/golang_analysis
        token: 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
        path: tools 

    - name: Build converter
      run: cd tools; go mod download golang.org/x/tools; go build
    - name: Prepare source files list
      run: cd src; go build -a -n 2>&1 >/dev/null | grep "compile -o" | grep "\./" | grep -oEi "\./([a-zA-Z_0-9]*\.go)" > source_files.txt
    - name: Run serialization to SSA
      run: cd src; ../tools/converter -in source_files.txt
    - name: What do we get?
      run: ls src



